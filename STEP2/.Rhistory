Rowv = FALSE,
dendrogram = "column",
scale = "row",
col = color.palette.3,
trace = "none",
margins = c(12,8),
cexRow = 0.9,
cexCol = 0.9,
labRow = genes30topTable,
labCol = str_c(colnames(DGEf.norm), group, sep = "-"),
key = TRUE,
density.info = "none",
lmat = rbind(4:3,2:1),
lhei = c(1,4),
lwid = c(1,4)
)
topgenes <- head(WT.vs.KO, n = 30)
topgenes
topgenes.ordered <- topgenes[order(topgenes$logFC),]
genes30topTable <- rownames(topgenes.ordered)
heatmap.2(vDGEf$E[genes30topTable,],
Rowv = FALSE,
dendrogram = "column",
scale = "row",
col = color.palette.3,
trace = "none",
margins = c(12,8),
cexRow = 0.9,
cexCol = 0.9,
labRow = genes30topTable,
labCol = str_c(colnames(DGEf.norm), group, sep = "-"),
key = TRUE,
density.info = "none",
lmat = rbind(4:3,2:1),
lhei = c(1,4),
lwid = c(1,4)
)
write.csv(topgenes.ordered, file = "topgenes-ordered.csv")
heatmap.2(vDGEf$E[genes30topTable,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
Rowv = FALSE,
dendrogram = "column",
scale = "row",
col = color.palette.3,
trace = "none",
margins = c(12,8),
cexRow = 0.9,
cexCol = 0.9,
labRow = genes30topTable,
labCol = str_c(colnames(DGEf.norm), group, sep = "-"),
key = TRUE,
density.info = "none",
lmat = rbind(4:3,2:1),
lhei = c(1,4),
lwid = c(1,4)
)
labelXaxis <- c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")
heatmap.2(vDGEf$E[genes30topTable,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
Rowv = FALSE,
dendrogram = "column",
scale = "row",
col = color.palette.3,
trace = "none",
margins = c(12,8),
cexRow = 0.9,
cexCol = 0.9,
labRow = genes30topTable,
labCol = labelXaxis,
key = TRUE,
density.info = "none",
lmat = rbind(4:3,2:1),
lhei = c(1,4),
lwid = c(1,4)
)
labelXaxis <- c("SRX1515306-WT","SRX1515307-WT","SRX1515308-WT","SRX1515309-WT","SRX1515310-WT","SRX1515315-IL13","SRX1515316-IL13","SRX1515317-IL13","SRX1515318-IL13","SRX1515319-IL13")
heatmap.2(vDGEf$E[genes30topTable,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
Rowv = FALSE,
dendrogram = "column",
scale = "row",
col = color.palette.3,
trace = "none",
margins = c(12,8),
cexRow = 0.9,
cexCol = 0.9,
labRow = genes30topTable,
labCol = labelXaxis,
key = TRUE,
density.info = "none",
lmat = rbind(4:3,2:1),
lhei = c(1,4),
lwid = c(1,4)
)
View(DGEobject)
View(vDGEf)
genesymbol1 <- "Wnt2b"
bp2 <-barplot(DGEobject$counts[geneSymbol1,],
xlim = c(0,2000), horiz = TRUE,
col = "skyblue",
axes = F, axisnames = F)
geneSymbol1 <- "Wnt2b"
bp2 <-barplot(DGEobject$counts[geneSymbol1,],
xlim = c(0,2000), horiz = TRUE,
col = "skyblue",
axes = F, axisnames = F)
axis(1)
axis(2, labels = colnames(DGEobject$counts),
at = bp1, las = 1, cex.axis = 0.8)
bp2 <-barplot(DGEobject$counts[geneSymbol1,],
xlim = c(0,2000), horiz = TRUE,
col = "skyblue",
axes = F, axisnames = F)
axis(1)
axis(2, labels = colnames(DGEobject$counts),
at = bp2, las = 1, cex.axis = 0.8)
title(main = paste0("Raw counts ",geneSymbol1))
bp2 <-barplot(DGEobject$counts[geneSymbol1,],
xlim = c(0,500), horiz = TRUE,
col = "skyblue",
axes = F, axisnames = F)
axis(1)
axis(2, labels = colnames(DGEobject$counts),
at = bp2, las = 1, cex.axis = 0.8)
title(main = paste0("Raw counts ",geneSymbol1))
bp2 <-barplot(DGEobject$counts[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = "skyblue",
axes = F, axisnames = F)
axis(1)
axis(2, labels = colnames(DGEobject$counts),
at = bp2, las = 1, cex.axis = 0.8)
bp2 <-barplot(DGEobject$counts[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = "skyblue",
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp2, las = 1, cex.axis = 0.8)
title(main = paste0("Raw counts ",geneSymbol1))
bp2 <-barplot(DGEobject$counts[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp2, las = 1, cex.axis = 0.8)
title(main = paste0("Raw counts ",geneSymbol1))
bp2 <-barplot(DGEobject$counts[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#B3CDE3",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp2, las = 1, cex.axis = 0.8)
title(main = paste0("Raw counts ",geneSymbol1))
View(DGEf.norm)
bp1 <- barplot(DGEobject$norm[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#B3CDE3",5)),
axes = F, axisnames = F)
bp1 <- barplot(DGEf.norm$counts[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#B3CDE3",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp1, las = 1, cex.axis = 0.8)
title(main = paste0("Normalized counts ",geneSymbol1))
bp1 <- barplot(vDGEf$E[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#B3CDE3",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp1, las = 1, cex.axis = 0.8)
title(main = paste0("Normalized counts ",geneSymbol1))
View(vDGEf)
bp1 <- barplot(vDGEf$E[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,5), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#B3CDE3",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp1, las = 1, cex.axis = 0.8)
title(main = paste0("Normalized counts ",geneSymbol1))
bp1 <- barplot(vDGEf$E[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,5), horiz = TRUE,
col = c(rep("#CCEBC5",5),rep("#B3CDE3",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp1, las = 1, cex.axis = 0.8)
title(main = paste0("Normalized counts ",geneSymbol1))
bp1 <- barplot(vDGEf$E[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,5), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#CCEBC5",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp1, las = 1, cex.axis = 0.8)
title(main = paste0("Normalized counts ",geneSymbol1))
par(mfrow = c(1,2), mar = c(4,8,2,2))
geneSymbol1 <- "Wnt2b"
# First barplot with normalized logCPM
bp1 <- barplot(vDGEf$E[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,5), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#CCEBC5",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp1, las = 1, cex.axis = 0.8)
title(main = paste0("Normalized counts ",geneSymbol1))
# Second barplot with raw counts
bp2 <- barplot(DGEobject$counts[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#CCEBC5",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp2, las = 1, cex.axis = 0.8)
title(main = paste0("Raw counts ",geneSymbol1))
par(mfrow = c(1,2), mar = c(4,8,2,2))
geneSymbol1 <- "Wnt2b"
# First barplot with normalized logCPM
bp1 <- barplot(vDGEf$E[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,5), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#CCEBC5",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp1, las = 1, cex.axis = 0.8)
title(main = paste0("Normalized counts ",geneSymbol1))
# Second barplot with raw counts
bp2 <- barplot(DGEobject$counts[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = c(rep("#FBB4AE",5),rep("#CCEBC5",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp2, las = 1, cex.axis = 0.8)
title(main = paste0("Raw counts ",geneSymbol1))
par(mfrow = c(1,2), mar = c(4,8,2,2))
geneSymbol1 <- "Wnt2b"
# First barplot with normalized logCPM
bp1 <- barplot(vDGEf$E[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,5), horiz = TRUE,
col = c(rep("#FB9A99",5),rep("#B2DF8A",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp1, las = 1, cex.axis = 0.8)
title(main = paste0("Normalized counts ",geneSymbol1))
# Second barplot with raw counts
bp2 <- barplot(DGEobject$counts[geneSymbol1,c("SRX1515306","SRX1515307","SRX1515308","SRX1515309","SRX1515310","SRX1515315","SRX1515316","SRX1515317","SRX1515318","SRX1515319")],
xlim = c(0,500), horiz = TRUE,
col = c(rep("#FB9A99",5),rep("#B2DF8A",5)),
axes = F, axisnames = F)
axis(1)
axis(2, labels = labelXaxis,
at = bp2, las = 1, cex.axis = 0.8)
title(main = paste0("Raw counts ",geneSymbol1))
## Correlation between absence/presence of plasmid and clinical relevance
present <- c(17,14)
absent <- c(67,52)
result <- data.frame(present,
absent,
row.names=c("Yes","Not reported/unclear"))
View(result)
fisher.test(result)
fisher.test(result, alternative = "two.sided")
## Correlation between absence/presence of plasmid and clinical relevance
present <- c(17,14)
absent <- c(67,52)
result1 <- data.frame(present,
absent,
row.names=c("Yes","Not reported/unclear"))
fisher.test(result1)
## Correlation between absence/presence of plasmid and growth
present <- c(14,17)
absent <- c(56,60)
result2 <- data.frame(present,
absent,
row.names=c("Slow","Rapid"))
fisher.test(result2)
# Loading packages
library(xlsx)
library(ggplot2)
# Loading data
setwd("/home/guest/Traineeship/Scripts/STEP2/")
data <- read.xlsx("MycoGenomesFilteredBUSCO.xlsx",1,header=TRUE)
View(data)
# Getting only the sizes out of the file
sizes <- data[which(data$Size..Mb.)]
# Getting only the sizes out of the file
sizes <- data$Size..Mb.
geno_name <- data$X.Organism.Name
geno_sizes <- data.frame(geno_name, sizes)
View(geno_sizes)
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity")
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_filp() +
ggtitle("Genome sizes in Mb")
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb")
# Loading packages
library(xlsx)
library(ggplot2)
# Loading data
setwd("/home/guest/Traineeship/Scripts/STEP2/")
data <- read.xlsx("Contigs.xlsx",1,header=TRUE)
# Barplot
ggplot(data=data,aes(x=Organisms, y=Contigs)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Number of contigs per genome")+
scale_y_continuous(limits = c(0,370), expand = c(0,0)) +
theme_bw() +
theme(axis.text.y=element_text(size=9),
axis.title.y=element_text(size=25),
axis.text.x=element_text(size=25),
axis.title.x=element_text(size=25),
plot.title=element_text(size=30,hjust=0.5)) +
geom_text(aes(label=Contigs),hjust=-0.2,size=4)
ggsave("barplot_contigs.png",width=20, height=30)
data <- read.xlsx("Contigs.xlsx",1,header=TRUE)
# Barplot
ggplot(data=data,aes(x=Species, y=Contigs)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Number of contigs per genome")+
scale_y_continuous(limits = c(0,370), expand = c(0,0)) +
theme_bw() +
theme(axis.text.y=element_text(size=9),
axis.title.y=element_text(size=25),
axis.text.x=element_text(size=25),
axis.title.x=element_text(size=25),
plot.title=element_text(size=30,hjust=0.5)) +
geom_text(aes(label=Contigs),hjust=-0.2,size=4)
ggsave("barplot_contigs.png",width=20, height=30)
data <- read.xlsx("MycoGenomesFilteredBUSCO.xlsx",1,header=TRUE)
# Getting only the sizes out of the file
sizes <- data$Size..Mb.
geno_name <- data$X.Organism.Name
geno_sizes <- data.frame(geno_name, sizes)
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
scale_y_continuous(limits=c(0,10))
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
scale_y_continuous(limits=c(0,10))
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
scale_y_continuous(limits=c(0,8))
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
scale_y_continuous(limits=c(0,8)) +
theme_bw() +
theme(axis.text.y=element_text(size=9),
axis.title.y=element_text(size=25),
axis.text.x=element_text(size=25),
axis.title.x=element_text(size=25),
plot.title=element_text(size=30,hjust=0.5)) +
geom_text(aes(label=Contigs),hjust=-0.2,size=4)
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
scale_y_continuous(limits=c(0,8)) +
theme_bw() +
theme(axis.text.y=element_text(size=9),
axis.title.y=element_text(size=25),
axis.text.x=element_text(size=25),
axis.title.x=element_text(size=25),
plot.title=element_text(size=30,hjust=0.5)) +
geom_text(aes(label=sizes),hjust=-0.2,size=4)
# Making barplot
ggplot(data=geno_sizes, aes(x=geno_name, y=sizes)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
scale_y_continuous(limits=c(0,8), expand=c(0,0)) +
theme_bw()
# Loading data
setwd("/home/guest/Traineeship/Scripts/STEP2/")
data <- read.xlsx("MycoGenomesFilteredBUSCO.xlsx",1,header=TRUE)
# Getting only the sizes out of the file
sizes <- data$Size..Mb.
geno_name <- data$X.Organism.Name
# Loading packages
library(xlsx)
library(ggplot2)
# Loading data
setwd("/home/guest/Traineeship/Scripts/STEP2/")
data <- read.xlsx("MycoGenomesFilteredBUSCO.xlsx",1,header=TRUE)
# Getting only the sizes out of the file
sizes <- data$Size..Mb.
geno_name <- data$X.Organism.Name
gsub("Mycobacterium", "M", geno_name)
geno_sizes <- data.frame(data$X.Organism.Name, data$Size..Mb.)
View(geno_sizes)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus and Mycolicibacter to M
geno_sizes_short <- gsub("Mycobacterium", "M", geno_sizes)
View(geno_sizes)
colnames(geno_sizes$data.X.Organism.Name) <- "Species"
colnames(geno_sizes)[1] <- "Species"
View(geno_sizes)
colnames(geno_sizes)[2] <- "Sizes / Mb"
View(geno_sizes)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
#gsub("Mycobacterium", "M", geno_sizes)
geno_sizes[geno_sizes == "Mycobacterium"] <- "M"
View(geno_sizes)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
gsub("Mycobacterium*", "M", geno_sizes$Species)
View(geno_sizes)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
geno_sizes <- gsub("Mycobacterium*", "M", geno_sizes$Species)
gsub("Mycolicibacterium*","M", geno_sizes$Species)
# Getting only the genome names and sizes in a dataframe
geno_sizes <- data.frame(data$X.Organism.Name, data$Size..Mb.)
colnames(geno_sizes)[1] <- "Species"
colnames(geno_sizes)[2] <- "Sizes / Mb"
View(geno_sizes)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
#geno_sizes[geno_sizes == "Mycobacterium"] <- "M"
gsub("Mycobacterium*", "M", geno_sizes$Species)
gsub("Mycolicibacterium*","M", geno_sizes$Species)
gsub("Mycobacteroides", "M", geno_sizes$Species)
View(geno_sizes)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
#geno_sizes[geno_sizes == "Mycobacterium"] <- "M"
gsub("Mycobacterium*", "M", geno_sizes$Species, inplace=TRUE)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
#geno_sizes[geno_sizes == "Mycobacterium"] <- "M"
replace("Mycobacterium*", "M", geno_sizes$Species, inplace=TRUE)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
#geno_sizes[geno_sizes == "Mycobacterium"] <- "M"
geno_sizes$Species.replace("Mycobacterium*", "M")
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
#geno_sizes[geno_sizes == "Mycobacterium"] <- "M"
geno_sizes$Species.replace("Mycobacterium", "M")
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
#geno_sizes[geno_sizes == "Mycobacterium"] <- "M"
df["Species"].str.replace("Mycobacterium", "M", regex=TRUE)
# Changing Mycobacterium, Mycolicibacterium, Mycobacteroides, Mycolicibacillus
# and Mycolicibacter to M
#geno_sizes[geno_sizes == "Mycobacterium"] <- "M"
df["Species"].str.replace("Mycobacterium", "M")
gsub("Mycolicibacterium*","M", geno_sizes$Species)
geno_sizes_short <- transform(geno_sizes, Species = sub("Mycobacterium","M",Species))
View(geno_sizes_short)
geno_sizes1 <- transform(geno_sizes, Species = sub("Mycobacterium","M",Species))
geno_sizes2 <- transform(geno_sizes1, Species = sub("Mycolicibacterium","M",Species))
View(geno_sizes2)
geno_sizes3 <- transform(geno_sizes2, Species = sub("Mycolicibacteroides","M",Species))
View(geno_sizes3)
geno_sizes3 <- transform(geno_sizes2, Species = sub("Mycobacteroides","M",Species))
View(geno_sizes3)
geno_sizes4 <- transform(geno_sizes3, Species = sub("Mycolicibacter","M",Species))
View(geno_sizes4)
geno_sizes_short <- transform(geno_sizes4, Species = sub("Mycolicibacillus","M",Species))
View(geno_sizes_short)
geno_sizes_short$
# Making barplot
ggplot(data=geno_sizes_short, aes(x=Species, y=Sizes...Mb)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
scale_y_continuous(limits=c(0,8), expand=c(0,0)) +
theme_bw()
library(ggplot2)
geno_sizes_short$
# Making barplot
ggplot(data=geno_sizes_short, aes(x=Species, y=Sizes...Mb)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Genome sizes in Mb") +
scale_y_continuous(limits=c(0,8), expand=c(0,0)) +
theme_bw()
View(geno_sizes_short)
View(data)
